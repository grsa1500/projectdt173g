{"version":3,"sources":["js/main.js","js/menu.js","js/parallax.js"],"names":["url","coursesurl","jobsurl","projectsurl","start","loadJobList","loadCourseList","loadProjectList","fetch","then","res","json","data","output","forEach","course","concat","name","school","program","points","startyear","endyear","document","getElementById","innerHTML","job","title","place","project","imgmobile","img","description","keywords","window","onload","bars","exit","openMenu","x","style","display","myFunction","ParallaxPart","matches","el","this","speed","maxScroll","parseFloat","getAttribute","parseInt","prototype","update","scrollY","offset","setYTransform","val","webkitTransform","MozTransform","OTransform","transform","msTransform","ParallaxManager","elements","Array","isArray","length","_typeof","item","slice","call","Error","querySelectorAll","i","parts","push","addEventListener","onScroll","bind","requestAnimationFrame","scrollHandler","Math","max","pageYOffset","$","scroll","toggleClass","scrollTop","matchMedia","addListener"],"mappings":"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","file":"main.js","sourcesContent":["const url = \"https://gsamuelsson.se/projektAPI/webservice.php\";\r\nlet coursesurl =url+'/courses';\r\nlet jobsurl =  url+'/jobs';\r\nlet projectsurl = url+'/projects';\r\n\r\nwindow.onload = start;\r\n\r\n// When window loads\r\nfunction start(){\r\n    loadJobList();\r\nloadCourseList();\r\nloadProjectList();\r\n}\r\n\r\n\r\n// Getting all courses\r\nfunction loadCourseList() {\r\n\r\n\r\n    fetch(coursesurl)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            let output = \"\";    \r\n  \r\n            data.forEach(function (course) {\r\n                output += `<tr>\r\n                    <td>${course.name}</td>\r\n                    <td>${course.school}</td>\r\n                    <td class=\"program\">${course.program}</td>\r\n                    <td class=\"points\">${course.points}</td>\r\n                    <td class=\"dates\">${course.startyear} - ${course.endyear}</td>\r\n                   \r\n                </tr>`;\r\n            })\r\n            document.getElementById(\"courseList\").innerHTML = output;\r\n        })\r\n }\r\n\r\n\r\n// getting all jobs\r\n        function loadJobList() {\r\n \r\n            fetch(jobsurl)\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    let output = \"\";    \r\n          \r\n                    data.forEach(function (job) {\r\n                        output += `<tr>\r\n                            <td>${job.title}</td>\r\n                            <td>${job.place}</td>\r\n                          \r\n                            <td>${job.startyear} - ${job.endyear}</td>\r\n                           \r\n                        </tr>`;\r\n                    })\r\n                    document.getElementById(\"jobList\").innerHTML = output;\r\n                })\r\n          }\r\n \r\n// Getting all projects\r\n          function loadProjectList() {\r\n \r\n            fetch(projectsurl)\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    let output = \"\";    \r\n          \r\n                    data.forEach(function (project) {\r\n                        output += `<div class=\"projekt\"\r\n                        ><br><br>\r\n                        <div class=\"imgbackground\">\r\n                                <img src=\"img/${project.imgmobile}\" alt=\"\"   class=\"mobile\">\r\n                            <img src=\"img/${project.img}\" alt=\"\"   class=\"desktop\"></div>\r\n                          \r\n                        <div class=\"textbox\"  >\r\n                            <h3>${project.title}</h3>\r\n                            <div class=\"line\"></div>\r\n                            <p>${project.description}</p>\r\n                                <span class=\"keyword\">${project.keywords}</span>                      <br><br><a href=\"${project.url}\" class=\"demo\" target=\"_blank\">Demo</a> <br><br>\r\n                        </div></div>`;\r\n                    })\r\n                    document.getElementById(\"ProjectList\").innerHTML = output;\r\n                })\r\n          }\r\n \r\n\r\n","var bars = document.getElementById(\"closed\");\r\nvar exit = document.getElementById(\"opened\");\r\n\r\n exit.style.display = 'none';\r\n\r\n\r\n // Changing background of menu when scrolling\r\n$(function () {\r\n    $(document).scroll(function () {\r\n      var $nav = $(\".navbar\");\r\n      $nav.toggleClass('scrolled', $(this).scrollTop() > 1000);\r\n    });\r\n  });\r\n\r\n\r\n // Opening/Closing menu on click \r\n  function openMenu() {\r\n  \r\n    var x = document.getElementById(\"allLinks\");\r\n\r\n    // checking if it's opened or closed\r\n    if (x.style.display === \"flex\") {\r\n      x.style.display = \"none\";\r\n      exit.style.display = 'none';\r\n      bars.style.display = 'block';\r\n    } else {\r\n      x.style.display = \"flex\";\r\n      exit.style.display = 'block';\r\n      bars.style.display = 'none';\r\n    }\r\n  }\r\n\r\n  $(function () {\r\n    $(document).scroll(function () {\r\n      var $nav = $(\".mobilenavbar\");\r\n      $nav.toggleClass('scrolled', $(this).scrollTop() > 600);\r\n    });\r\n  });\r\n\r\n","function myFunction(x) {\r\n  if (x.matches) { // If media query matches\r\n \r\n    var ParallaxManager, ParallaxPart;\r\n\r\nParallaxPart = (function() {\r\n  function ParallaxPart(el) {\r\n    this.el = el;\r\n    this.speed = 0;\r\n    this.maxScroll = 0;\r\n  }\r\n\r\n\r\n  return ParallaxPart;\r\n\r\n})();\r\n\r\n\r\n  } else {\r\n    var ParallaxManager, ParallaxPart;\r\n\r\nParallaxPart = (function() {\r\n  function ParallaxPart(el) {\r\n    this.el = el;\r\n    this.speed = parseFloat(this.el.getAttribute('data-parallax-speed'));\r\n    this.maxScroll = parseInt(this.el.getAttribute('data-max-scroll'));\r\n  }\r\n\r\n  // Counting Y-offset of elements\r\n  ParallaxPart.prototype.update = function(scrollY) {\r\n    if (scrollY > this.maxScroll) { return; }\r\n    var offset = -(scrollY * this.speed);\r\n    this.setYTransform(offset);\r\n  };\r\n\r\n  // Adding inline CSS\r\n  ParallaxPart.prototype.setYTransform = function(val) {\r\n    this.el.style.webkitTransform = \"translate3d(0, \" + val + \"px, 0)\";\r\n    this.el.style.MozTransform    = \"translate3d(0, \" + val + \"px, 0)\";\r\n    this.el.style.OTransform      = \"translate3d(0, \" + val + \"px, 0)\";\r\n    this.el.style.transform       = \"translate3d(0, \" + val + \"px, 0)\";\r\n    this.el.style.msTransform     = \"translateY(\" + val + \"px)\";\r\n  };\r\n\r\n  return ParallaxPart;\r\n\r\n})();\r\n\r\nParallaxManager = (function() {\r\n  ParallaxManager.prototype.parts = [];\r\n\r\n  function ParallaxManager(elements) {\r\n    if (Array.isArray(elements) && elements.length) {\r\n      this.elements = elements;\r\n    }\r\n    if (typeof elements === 'object' && elements.item) {\r\n      this.elements = Array.prototype.slice.call(elements);\r\n    } else if (typeof elements === 'string') {\r\n      this.elements = document.querySelectorAll(elements);\r\n      if (this.elements.length === 0) {\r\n        throw new Error(\"Parallax: No elements found\");\r\n      }\r\n      this.elements = Array.prototype.slice.call(this.elements);\r\n    } else {\r\n      throw new Error(\"Parallax: Element variable is not a querySelector string, Array, or NodeList\");\r\n    }\r\n    for (var i in this.elements) {\r\n      this.parts.push(new ParallaxPart(this.elements[i]));\r\n    }\r\n    window.addEventListener(\"scroll\", this.onScroll.bind(this));\r\n  }\r\n\r\n  ParallaxManager.prototype.onScroll = function() {\r\n    window.requestAnimationFrame(this.scrollHandler.bind(this));\r\n  };\r\n\r\n  ParallaxManager.prototype.scrollHandler = function() {\r\n    var scrollY = Math.max(window.pageYOffset, 0);\r\n    for (var i in this.parts) { this.parts[i].update(scrollY); }\r\n  };\r\n\r\n  return ParallaxManager;\r\n\r\n})();\r\n\r\nnew ParallaxManager('.parallax-layer');\r\n\r\n\r\n\r\n\r\n  }\r\n}\r\n\r\nvar x = window.matchMedia(\"(max-width: 700px)\")\r\nmyFunction(x) // Call listener function at run time\r\nx.addListener(myFunction) // Attach listener function on state changes\r\n\r\n"]}